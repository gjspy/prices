make an interface for the parsers of api responses. define waht methods exist and are ready to be overwritten from the superclass.

class ParserInterface():
	def load_data():
		"""This is the llading data"""


class Parser(parserInterface):
	def __init__():


class GraphQLParser(Parser):
	...


for CMP: User.name in ("Bob", "James")
and NOT keyword, look at other dunder methods. (__invert__?)

LIKE keyword: eg Name LIKE '%i%' = any record including the letter i.

MAKE .config UPDATE EVERY TIME ITS NEEDED? INSTEAD OF GLOBAL "API_KEY", HAVE get_api_key(), SO CAN UPDATE WITHOUT RESTARTING CODE
LOTS OF ERR HANDLING + LOGGING + SEND TO DISCORD. API GETS UPDATED, I NEED TO KNOW.
HOW TO CLEANLY SHUT DOWN CODE?
HAVE .state FILE SO IT CAN PICK BACK UP??

ON MY GRAPH OF PRICE HISTORY, SHADE REGIONS WHERE AN OFFER WAS APPLIED
GRAPH BKG IS WHITE, THEN WHEN "ANy X" WAS ON, LIGHT RED SHADING, CNA HOVER

meal deal page, comparing them all :)